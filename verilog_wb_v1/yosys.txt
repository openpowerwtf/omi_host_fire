
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3672 (git sha1 014c7e26, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os)


-- Executing script file `synth.ys' --

1. Executing Verilog-2005 frontend: tl/bram_syn_test.v
Parsing Verilog input from `tl/bram_syn_test.v' to AST representation.
Generating RTLIL representation for module `\bram_syn_test'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: tl/dram_syn_test.v
Parsing Verilog input from `tl/dram_syn_test.v' to AST representation.
Generating RTLIL representation for module `\dram_syn_test'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: tl/ocx_leaf_inferd_regfile.v
Parsing Verilog input from `tl/ocx_leaf_inferd_regfile.v' to AST representation.
Generating RTLIL representation for module `\ocx_leaf_inferd_regfile'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: tl/ocx_tlx_513x32_fifo.v
Parsing Verilog input from `tl/ocx_tlx_513x32_fifo.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_513x32_fifo'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: tl/ocx_tlx_514x16_fifo.v
Parsing Verilog input from `tl/ocx_tlx_514x16_fifo.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_514x16_fifo'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: tl/ocx_tlx_bdi_mac.v
Parsing Verilog input from `tl/ocx_tlx_bdi_mac.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_bdi_mac'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: tl/ocx_tlx_cfg_mac.v
Parsing Verilog input from `tl/ocx_tlx_cfg_mac.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_cfg_mac'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: tl/ocx_tlx_cmd_fifo_mac.v
Parsing Verilog input from `tl/ocx_tlx_cmd_fifo_mac.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_cmd_fifo_mac'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: tl/ocx_tlx_ctl_fsm.v
Parsing Verilog input from `tl/ocx_tlx_ctl_fsm.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_ctl_fsm'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: tl/ocx_tlx_data_arb.v
Parsing Verilog input from `tl/ocx_tlx_data_arb.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_data_arb'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: tl/ocx_tlx_data_fifo_mac.v
Parsing Verilog input from `tl/ocx_tlx_data_fifo_mac.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_data_fifo_mac'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: tl/ocx_tlx_dcp_fifo_ctl.v
Parsing Verilog input from `tl/ocx_tlx_dcp_fifo_ctl.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_dcp_fifo_ctl'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: tl/ocx_tlx_fifo_cntlr.v
Parsing Verilog input from `tl/ocx_tlx_fifo_cntlr.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_fifo_cntlr'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: tl/ocx_tlx_flit_parser.v
Parsing Verilog input from `tl/ocx_tlx_flit_parser.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_flit_parser'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: tl/ocx_tlx_framer.v
Parsing Verilog input from `tl/ocx_tlx_framer.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_framer'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: tl/ocx_tlx_framer_cmd_fifo.v
Parsing Verilog input from `tl/ocx_tlx_framer_cmd_fifo.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_framer_cmd_fifo'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: tl/ocx_tlx_framer_rsp_fifo.v
Parsing Verilog input from `tl/ocx_tlx_framer_rsp_fifo.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_framer_rsp_fifo'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: tl/ocx_tlx_parse_mac.v
Parsing Verilog input from `tl/ocx_tlx_parse_mac.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_parse_mac'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: tl/ocx_tlx_parser_err_mac.v
Parsing Verilog input from `tl/ocx_tlx_parser_err_mac.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_parser_err_mac'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: tl/ocx_tlx_rcv_mac.v
Parsing Verilog input from `tl/ocx_tlx_rcv_mac.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_rcv_mac'.
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: tl/ocx_tlx_rcv_top.v
Parsing Verilog input from `tl/ocx_tlx_rcv_top.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_rcv_top'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: tl/ocx_tlx_resp_fifo_mac.v
Parsing Verilog input from `tl/ocx_tlx_resp_fifo_mac.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_resp_fifo_mac'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: tl/ocx_tlx_top.v
Parsing Verilog input from `tl/ocx_tlx_top.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_top'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: tl/ocx_tlx_vc0_fifo_ctl.v
Parsing Verilog input from `tl/ocx_tlx_vc0_fifo_ctl.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_vc0_fifo_ctl'.
Successfully finished Verilog frontend.

25. Executing Verilog-2005 frontend: tl/ocx_tlx_vc1_fifo_ctl.v
Parsing Verilog input from `tl/ocx_tlx_vc1_fifo_ctl.v' to AST representation.
Generating RTLIL representation for module `\ocx_tlx_vc1_fifo_ctl'.
Successfully finished Verilog frontend.

26. Executing Verilog-2005 frontend: dl/ocx_bram_infer.v
Parsing Verilog input from `dl/ocx_bram_infer.v' to AST representation.
Generating RTLIL representation for module `\ocx_bram_infer'.
Successfully finished Verilog frontend.

27. Executing Verilog-2005 frontend: dl/ocx_dlx_crc.v
Parsing Verilog input from `dl/ocx_dlx_crc.v' to AST representation.
Generating RTLIL representation for module `\ocx_dlx_crc'.
Successfully finished Verilog frontend.

28. Executing Verilog-2005 frontend: dl/ocx_dlx_crc16.v
Parsing Verilog input from `dl/ocx_dlx_crc16.v' to AST representation.
Generating RTLIL representation for module `\ocx_dlx_crc16'.
Successfully finished Verilog frontend.

29. Executing Verilog-2005 frontend: dl/ocx_dlx_rx_bs.v
Parsing Verilog input from `dl/ocx_dlx_rx_bs.v' to AST representation.
Generating RTLIL representation for module `\ocx_dlx_rx_bs'.
Successfully finished Verilog frontend.

30. Executing Verilog-2005 frontend: dl/ocx_dlx_rx_lane.v
Parsing Verilog input from `dl/ocx_dlx_rx_lane.v' to AST representation.
Generating RTLIL representation for module `\ocx_dlx_rx_lane'.
dl/ocx_dlx_rx_lane.v:871: Warning: Identifier `\EDPL_pchk' is implicitly declared.
Successfully finished Verilog frontend.

31. Executing Verilog-2005 frontend: dl/ocx_dlx_rx_lane_66.v
Parsing Verilog input from `dl/ocx_dlx_rx_lane_66.v' to AST representation.
Generating RTLIL representation for module `\ocx_dlx_rx_lane_66'.
Successfully finished Verilog frontend.

32. Executing Verilog-2005 frontend: dl/ocx_dlx_rx_main.v
Parsing Verilog input from `dl/ocx_dlx_rx_main.v' to AST representation.
Generating RTLIL representation for module `\ocx_dlx_rx_main'.
Successfully finished Verilog frontend.

33. Executing Verilog-2005 frontend: dl/ocx_dlx_rxdf.v
Parsing Verilog input from `dl/ocx_dlx_rxdf.v' to AST representation.
Generating RTLIL representation for module `\ocx_dlx_rxdf'.
Successfully finished Verilog frontend.

34. Executing Verilog-2005 frontend: dl/ocx_dlx_top.v
Parsing Verilog input from `dl/ocx_dlx_top.v' to AST representation.
Generating RTLIL representation for module `\ocx_dlx_top'.
Successfully finished Verilog frontend.

35. Executing Verilog-2005 frontend: dl/ocx_dlx_tx_ctl.v
Parsing Verilog input from `dl/ocx_dlx_tx_ctl.v' to AST representation.
Generating RTLIL representation for module `\ocx_dlx_tx_ctl'.
Successfully finished Verilog frontend.

36. Executing Verilog-2005 frontend: dl/ocx_dlx_tx_flt.v
Parsing Verilog input from `dl/ocx_dlx_tx_flt.v' to AST representation.
Generating RTLIL representation for module `\ocx_dlx_tx_flt'.
dl/ocx_dlx_tx_flt.v:950: Warning: Identifier `\fsm_rpl_start' is implicitly declared.
Successfully finished Verilog frontend.

37. Executing Verilog-2005 frontend: dl/ocx_dlx_tx_gbx.v
Parsing Verilog input from `dl/ocx_dlx_tx_gbx.v' to AST representation.
Generating RTLIL representation for module `\ocx_dlx_tx_gbx'.
Note: Assuming pure combinatorial block at dl/ocx_dlx_tx_gbx.v:121.5-189.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

38. Executing Verilog-2005 frontend: dl/ocx_dlx_tx_que.v
Parsing Verilog input from `dl/ocx_dlx_tx_que.v' to AST representation.
Generating RTLIL representation for module `\ocx_dlx_tx_que'.
Successfully finished Verilog frontend.

39. Executing Verilog-2005 frontend: dl/ocx_dlx_txdf.v
Parsing Verilog input from `dl/ocx_dlx_txdf.v' to AST representation.
Generating RTLIL representation for module `\ocx_dlx_txdf'.
Successfully finished Verilog frontend.

40. Executing Verilog-2005 frontend: dl/ocx_dlx_xlx_if.v
Parsing Verilog input from `dl/ocx_dlx_xlx_if.v' to AST representation.
Generating RTLIL representation for module `\ocx_dlx_xlx_if'.
Successfully finished Verilog frontend.

41. Executing Verilog-2005 frontend: omi_host.v
Parsing Verilog input from `omi_host.v' to AST representation.
Generating RTLIL representation for module `\omi_host'.
Successfully finished Verilog frontend.

42. Executing HIERARCHY pass (managing design hierarchy).

42.1. Analyzing design hierarchy..
Top module:  \omi_host
Used module:     \ocx_dlx_top
Used module:         \ocx_dlx_xlx_if
Used module:         \ocx_dlx_txdf
Used module:             \ocx_dlx_tx_gbx
Used module:             \ocx_dlx_tx_que
Used module:             \ocx_dlx_tx_flt
Used module:                 \ocx_bram_infer
Used module:                 \ocx_dlx_crc16
Used module:                 \ocx_dlx_crc
Used module:             \ocx_dlx_tx_ctl
Used module:         \ocx_dlx_rxdf
Used module:             \ocx_dlx_rx_lane_66
Used module:             \ocx_dlx_rx_lane
Used module:             \ocx_dlx_rx_main
Used module:                 \ocx_dlx_rx_bs
Used module:     \ocx_tlx_top
Used module:         \ocx_tlx_framer
Used module:             \ocx_tlx_513x32_fifo
Used module:                 \ocx_tlx_fifo_cntlr
Used module:                 \ocx_leaf_inferd_regfile
Used module:             \ocx_tlx_514x16_fifo
Used module:             \ocx_tlx_framer_cmd_fifo
Used module:             \ocx_tlx_framer_rsp_fifo
Used module:         \ocx_tlx_rcv_top
Used module:             \ocx_tlx_parser_err_mac
Used module:             \ocx_tlx_rcv_mac
Used module:                 \ocx_tlx_cfg_mac
Used module:                     \dram_syn_test
Used module:                 \ocx_tlx_data_fifo_mac
Used module:                     \ocx_tlx_bdi_mac
Used module:                     \bram_syn_test
Used module:                     \ocx_tlx_dcp_fifo_ctl
Used module:                 \ocx_tlx_resp_fifo_mac
Used module:                     \ocx_tlx_vc0_fifo_ctl
Used module:                 \ocx_tlx_cmd_fifo_mac
Used module:                     \ocx_tlx_vc1_fifo_ctl
Used module:             \ocx_tlx_parse_mac
Used module:                 \ocx_tlx_ctl_fsm
Used module:                 \ocx_tlx_data_arb
Used module:                 \ocx_tlx_flit_parser
Parameter \FIFO_ADDR_WIDTH = 5

42.2. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_tlx_fifo_cntlr'.
Parameter \FIFO_ADDR_WIDTH = 5
Generating RTLIL representation for module `$paramod\ocx_tlx_fifo_cntlr\FIFO_ADDR_WIDTH=5'.
Parameter \REGFILE_DEPTH = 32
Parameter \REGFILE_WIDTH = 513
Parameter \ADDR_WIDTH = 5

42.3. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_leaf_inferd_regfile'.
Parameter \REGFILE_DEPTH = 32
Parameter \REGFILE_WIDTH = 513
Parameter \ADDR_WIDTH = 5
Generating RTLIL representation for module `$paramod\ocx_leaf_inferd_regfile\REGFILE_DEPTH=32\REGFILE_WIDTH=513\ADDR_WIDTH=5'.
Parameter \FIFO_ADDR_WIDTH = 4

42.4. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_tlx_fifo_cntlr'.
Parameter \FIFO_ADDR_WIDTH = 4
Generating RTLIL representation for module `$paramod\ocx_tlx_fifo_cntlr\FIFO_ADDR_WIDTH=4'.
Parameter \REGFILE_DEPTH = 16
Parameter \REGFILE_WIDTH = 514
Parameter \ADDR_WIDTH = 4

42.5. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_leaf_inferd_regfile'.
Parameter \REGFILE_DEPTH = 16
Parameter \REGFILE_WIDTH = 514
Parameter \ADDR_WIDTH = 4
Generating RTLIL representation for module `$paramod\ocx_leaf_inferd_regfile\REGFILE_DEPTH=16\REGFILE_WIDTH=514\ADDR_WIDTH=4'.
Parameter \ADDRESSWIDTH = 6
Parameter \BITWIDTH = 32
Parameter \DEPTH = 64

42.6. Executing AST frontend in derive mode using pre-parsed AST for module `\dram_syn_test'.
Parameter \ADDRESSWIDTH = 6
Parameter \BITWIDTH = 32
Parameter \DEPTH = 64
Generating RTLIL representation for module `$paramod\dram_syn_test\ADDRESSWIDTH=6\BITWIDTH=32\DEPTH=64'.
Parameter \ADDRESSWIDTH = 6
Parameter \BITWIDTH = 168
Parameter \DEPTH = 64

42.7. Executing AST frontend in derive mode using pre-parsed AST for module `\dram_syn_test'.
Parameter \ADDRESSWIDTH = 6
Parameter \BITWIDTH = 168
Parameter \DEPTH = 64
Generating RTLIL representation for module `$paramod\dram_syn_test\ADDRESSWIDTH=6\BITWIDTH=168\DEPTH=64'.
Parameter \addr_width = 6
Parameter \DATA_WIDTH = 168

42.8. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_tlx_vc1_fifo_ctl'.
Parameter \addr_width = 6
Parameter \DATA_WIDTH = 168
Generating RTLIL representation for module `$paramod\ocx_tlx_vc1_fifo_ctl\addr_width=6\DATA_WIDTH=168'.
Parameter \resp_addr_width = 8
Parameter \cmd_addr_width = 7

42.9. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_tlx_bdi_mac'.
Parameter \resp_addr_width = 8
Parameter \cmd_addr_width = 7
Generating RTLIL representation for module `$paramod\ocx_tlx_bdi_mac\resp_addr_width=8\cmd_addr_width=7'.
Parameter \ADDRESSWIDTH = 8
Parameter \BITWIDTH = 256
Parameter \DEPTH = 256

42.10. Executing AST frontend in derive mode using pre-parsed AST for module `\bram_syn_test'.
Parameter \ADDRESSWIDTH = 8
Parameter \BITWIDTH = 256
Parameter \DEPTH = 256
Generating RTLIL representation for module `$paramod\bram_syn_test\ADDRESSWIDTH=8\BITWIDTH=256\DEPTH=256'.
Parameter \ADDRESSWIDTH = 8
Parameter \BITWIDTH = 256
Parameter \DEPTH = 256
Found cached RTLIL representation for module `$paramod\bram_syn_test\ADDRESSWIDTH=8\BITWIDTH=256\DEPTH=256'.
Parameter \addr_width = 8

42.11. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_tlx_dcp_fifo_ctl'.
Parameter \addr_width = 8
Generating RTLIL representation for module `$paramod\ocx_tlx_dcp_fifo_ctl\addr_width=8'.
Parameter \ADDRESSWIDTH = 7
Parameter \BITWIDTH = 256
Parameter \DEPTH = 128

42.12. Executing AST frontend in derive mode using pre-parsed AST for module `\dram_syn_test'.
Parameter \ADDRESSWIDTH = 7
Parameter \BITWIDTH = 256
Parameter \DEPTH = 128
Generating RTLIL representation for module `$paramod\dram_syn_test\ADDRESSWIDTH=7\BITWIDTH=256\DEPTH=128'.
Parameter \ADDRESSWIDTH = 7
Parameter \BITWIDTH = 256
Parameter \DEPTH = 128
Found cached RTLIL representation for module `$paramod\dram_syn_test\ADDRESSWIDTH=7\BITWIDTH=256\DEPTH=128'.
Parameter \addr_width = 7

42.13. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_tlx_dcp_fifo_ctl'.
Parameter \addr_width = 7
Generating RTLIL representation for module `$paramod\ocx_tlx_dcp_fifo_ctl\addr_width=7'.
Parameter \addr_width = 6

42.14. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_tlx_cfg_mac'.
Parameter \addr_width = 6
Generating RTLIL representation for module `$paramod\ocx_tlx_cfg_mac\addr_width=6'.
Parameter \cmd_addr_width = 7
Parameter \resp_addr_width = 8

42.15. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_tlx_data_fifo_mac'.
Parameter \cmd_addr_width = 7
Parameter \resp_addr_width = 8
Generating RTLIL representation for module `$paramod\ocx_tlx_data_fifo_mac\cmd_addr_width=7\resp_addr_width=8'.
Parameter \resp_addr_width = 7

42.16. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_tlx_resp_fifo_mac'.
Parameter \resp_addr_width = 7
Generating RTLIL representation for module `$paramod\ocx_tlx_resp_fifo_mac\resp_addr_width=7'.
Parameter \cmd_addr_width = 6

42.17. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_tlx_cmd_fifo_mac'.
Parameter \cmd_addr_width = 6
Generating RTLIL representation for module `$paramod\ocx_tlx_cmd_fifo_mac\cmd_addr_width=6'.
Parameter \ADDRESSWIDTH = 7
Parameter \BITWIDTH = 56
Parameter \DEPTH = 128

42.18. Executing AST frontend in derive mode using pre-parsed AST for module `\bram_syn_test'.
Parameter \ADDRESSWIDTH = 7
Parameter \BITWIDTH = 56
Parameter \DEPTH = 128
Generating RTLIL representation for module `$paramod\bram_syn_test\ADDRESSWIDTH=7\BITWIDTH=56\DEPTH=128'.
Parameter \addr_width = 7
Parameter \DATA_WIDTH = 56

42.19. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_tlx_vc0_fifo_ctl'.
Parameter \addr_width = 7
Parameter \DATA_WIDTH = 56
Generating RTLIL representation for module `$paramod\ocx_tlx_vc0_fifo_ctl\addr_width=7\DATA_WIDTH=56'.
Parameter \GEMINI_NOT_APOLLO = 0

42.20. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_dlx_rx_main'.
Parameter \GEMINI_NOT_APOLLO = 0
Generating RTLIL representation for module `$paramod\ocx_dlx_rx_main\GEMINI_NOT_APOLLO=0'.
Parameter \GEMINI_NOT_APOLLO = 0

42.21. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_dlx_txdf'.
Parameter \GEMINI_NOT_APOLLO = 0
Generating RTLIL representation for module `$paramod\ocx_dlx_txdf\GEMINI_NOT_APOLLO=0'.
Parameter \GEMINI_NOT_APOLLO = 0

42.22. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_dlx_rxdf'.
Parameter \GEMINI_NOT_APOLLO = 0
Generating RTLIL representation for module `$paramod\ocx_dlx_rxdf\GEMINI_NOT_APOLLO=0'.
Parameter \GEMINI_NOT_APOLLO = 0

42.23. Executing AST frontend in derive mode using pre-parsed AST for module `\ocx_dlx_tx_ctl'.
Parameter \GEMINI_NOT_APOLLO = 0
Generating RTLIL representation for module `$paramod\ocx_dlx_tx_ctl\GEMINI_NOT_APOLLO=0'.

42.24. Analyzing design hierarchy..
Top module:  \omi_host
Used module:     \ocx_dlx_top
Used module:         \ocx_dlx_xlx_if
Used module:         $paramod\ocx_dlx_txdf\GEMINI_NOT_APOLLO=0
Used module:             \ocx_dlx_tx_gbx
Used module:             \ocx_dlx_tx_que
Used module:             \ocx_dlx_tx_flt
Used module:                 \ocx_bram_infer
Used module:                 \ocx_dlx_crc16
Used module:                 \ocx_dlx_crc
Used module:             \ocx_dlx_tx_ctl
Used module:         $paramod\ocx_dlx_rxdf\GEMINI_NOT_APOLLO=0
Used module:             \ocx_dlx_rx_lane_66
Used module:             \ocx_dlx_rx_lane
Used module:             \ocx_dlx_rx_main
Used module:                 \ocx_dlx_rx_bs
Used module:     \ocx_tlx_top
Used module:         \ocx_tlx_framer
Used module:             \ocx_tlx_513x32_fifo
Used module:                 $paramod\ocx_tlx_fifo_cntlr\FIFO_ADDR_WIDTH=5
Used module:                 $paramod\ocx_leaf_inferd_regfile\REGFILE_DEPTH=32\REGFILE_WIDTH=513\ADDR_WIDTH=5
Used module:             \ocx_tlx_514x16_fifo
Used module:                 $paramod\ocx_tlx_fifo_cntlr\FIFO_ADDR_WIDTH=4
Used module:                 $paramod\ocx_leaf_inferd_regfile\REGFILE_DEPTH=16\REGFILE_WIDTH=514\ADDR_WIDTH=4
Used module:             \ocx_tlx_framer_cmd_fifo
Used module:             \ocx_tlx_framer_rsp_fifo
Used module:         \ocx_tlx_rcv_top
Used module:             \ocx_tlx_parser_err_mac
Used module:             \ocx_tlx_rcv_mac
Used module:                 $paramod\ocx_tlx_cfg_mac\addr_width=6
Used module:                     \dram_syn_test
Used module:                 $paramod\ocx_tlx_data_fifo_mac\cmd_addr_width=7\resp_addr_width=8
Used module:                     \ocx_tlx_bdi_mac
Used module:                     \bram_syn_test
Used module:                     \ocx_tlx_dcp_fifo_ctl
Used module:                 $paramod\ocx_tlx_resp_fifo_mac\resp_addr_width=7
Used module:                     \ocx_tlx_vc0_fifo_ctl
Used module:                 $paramod\ocx_tlx_cmd_fifo_mac\cmd_addr_width=6
Used module:                     \ocx_tlx_vc1_fifo_ctl
Used module:             \ocx_tlx_parse_mac
Used module:                 \ocx_tlx_ctl_fsm
Used module:                 \ocx_tlx_data_arb
Used module:                 \ocx_tlx_flit_parser
Parameter \ADDRESSWIDTH = 6
Parameter \BITWIDTH = 32
Parameter \DEPTH = 64
Found cached RTLIL representation for module `$paramod\dram_syn_test\ADDRESSWIDTH=6\BITWIDTH=32\DEPTH=64'.
Parameter \resp_addr_width = 8
Parameter \cmd_addr_width = 7
Found cached RTLIL representation for module `$paramod\ocx_tlx_bdi_mac\resp_addr_width=8\cmd_addr_width=7'.
Parameter \ADDRESSWIDTH = 8
Parameter \BITWIDTH = 256
Parameter \DEPTH = 256
Found cached RTLIL representation for module `$paramod\bram_syn_test\ADDRESSWIDTH=8\BITWIDTH=256\DEPTH=256'.
Parameter \ADDRESSWIDTH = 8
Parameter \BITWIDTH = 256
Parameter \DEPTH = 256
Found cached RTLIL representation for module `$paramod\bram_syn_test\ADDRESSWIDTH=8\BITWIDTH=256\DEPTH=256'.
Parameter \addr_width = 8
Found cached RTLIL representation for module `$paramod\ocx_tlx_dcp_fifo_ctl\addr_width=8'.
Parameter \ADDRESSWIDTH = 7
Parameter \BITWIDTH = 256
Parameter \DEPTH = 128
Found cached RTLIL representation for module `$paramod\dram_syn_test\ADDRESSWIDTH=7\BITWIDTH=256\DEPTH=128'.
Parameter \ADDRESSWIDTH = 7
Parameter \BITWIDTH = 256
Parameter \DEPTH = 128
Found cached RTLIL representation for module `$paramod\dram_syn_test\ADDRESSWIDTH=7\BITWIDTH=256\DEPTH=128'.
Parameter \addr_width = 7
Found cached RTLIL representation for module `$paramod\ocx_tlx_dcp_fifo_ctl\addr_width=7'.
Parameter \ADDRESSWIDTH = 7
Parameter \BITWIDTH = 56
Parameter \DEPTH = 128
Found cached RTLIL representation for module `$paramod\bram_syn_test\ADDRESSWIDTH=7\BITWIDTH=56\DEPTH=128'.
Parameter \addr_width = 7
Parameter \DATA_WIDTH = 56
Found cached RTLIL representation for module `$paramod\ocx_tlx_vc0_fifo_ctl\addr_width=7\DATA_WIDTH=56'.
Parameter \ADDRESSWIDTH = 6
Parameter \BITWIDTH = 168
Parameter \DEPTH = 64
Found cached RTLIL representation for module `$paramod\dram_syn_test\ADDRESSWIDTH=6\BITWIDTH=168\DEPTH=64'.
Parameter \addr_width = 6
Parameter \DATA_WIDTH = 168
Found cached RTLIL representation for module `$paramod\ocx_tlx_vc1_fifo_ctl\addr_width=6\DATA_WIDTH=168'.
Parameter \GEMINI_NOT_APOLLO = 0
Found cached RTLIL representation for module `$paramod\ocx_dlx_tx_ctl\GEMINI_NOT_APOLLO=0'.
Parameter \GEMINI_NOT_APOLLO = 0
Found cached RTLIL representation for module `$paramod\ocx_dlx_rx_main\GEMINI_NOT_APOLLO=0'.

42.25. Analyzing design hierarchy..
Top module:  \omi_host
Used module:     \ocx_dlx_top
Used module:         \ocx_dlx_xlx_if
Used module:         $paramod\ocx_dlx_txdf\GEMINI_NOT_APOLLO=0
Used module:             \ocx_dlx_tx_gbx
Used module:             \ocx_dlx_tx_que
Used module:             \ocx_dlx_tx_flt
Used module:                 \ocx_bram_infer
Used module:                 \ocx_dlx_crc16
Used module:                 \ocx_dlx_crc
Used module:             $paramod\ocx_dlx_tx_ctl\GEMINI_NOT_APOLLO=0
Used module:         $paramod\ocx_dlx_rxdf\GEMINI_NOT_APOLLO=0
Used module:             \ocx_dlx_rx_lane_66
Used module:             \ocx_dlx_rx_lane
Used module:             $paramod\ocx_dlx_rx_main\GEMINI_NOT_APOLLO=0
Used module:                 \ocx_dlx_rx_bs
Used module:     \ocx_tlx_top
Used module:         \ocx_tlx_framer
Used module:             \ocx_tlx_513x32_fifo
Used module:                 $paramod\ocx_tlx_fifo_cntlr\FIFO_ADDR_WIDTH=5
Used module:                 $paramod\ocx_leaf_inferd_regfile\REGFILE_DEPTH=32\REGFILE_WIDTH=513\ADDR_WIDTH=5
Used module:             \ocx_tlx_514x16_fifo
Used module:                 $paramod\ocx_tlx_fifo_cntlr\FIFO_ADDR_WIDTH=4
Used module:                 $paramod\ocx_leaf_inferd_regfile\REGFILE_DEPTH=16\REGFILE_WIDTH=514\ADDR_WIDTH=4
Used module:             \ocx_tlx_framer_cmd_fifo
Used module:             \ocx_tlx_framer_rsp_fifo
Used module:         \ocx_tlx_rcv_top
Used module:             \ocx_tlx_parser_err_mac
Used module:             \ocx_tlx_rcv_mac
Used module:                 $paramod\ocx_tlx_cfg_mac\addr_width=6
Used module:                     $paramod\dram_syn_test\ADDRESSWIDTH=6\BITWIDTH=32\DEPTH=64
Used module:                 $paramod\ocx_tlx_data_fifo_mac\cmd_addr_width=7\resp_addr_width=8
Used module:                     $paramod\ocx_tlx_bdi_mac\resp_addr_width=8\cmd_addr_width=7
Used module:                     $paramod\bram_syn_test\ADDRESSWIDTH=8\BITWIDTH=256\DEPTH=256
Used module:                     $paramod\ocx_tlx_dcp_fifo_ctl\addr_width=8
Used module:                     $paramod\dram_syn_test\ADDRESSWIDTH=7\BITWIDTH=256\DEPTH=128
Used module:                     $paramod\ocx_tlx_dcp_fifo_ctl\addr_width=7
Used module:                 $paramod\ocx_tlx_resp_fifo_mac\resp_addr_width=7
Used module:                     $paramod\bram_syn_test\ADDRESSWIDTH=7\BITWIDTH=56\DEPTH=128
Used module:                     $paramod\ocx_tlx_vc0_fifo_ctl\addr_width=7\DATA_WIDTH=56
Used module:                 $paramod\ocx_tlx_cmd_fifo_mac\cmd_addr_width=6
Used module:                     $paramod\dram_syn_test\ADDRESSWIDTH=6\BITWIDTH=168\DEPTH=64
Used module:                     $paramod\ocx_tlx_vc1_fifo_ctl\addr_width=6\DATA_WIDTH=168
Used module:             \ocx_tlx_parse_mac
Used module:                 \ocx_tlx_ctl_fsm
Used module:                 \ocx_tlx_data_arb
Used module:                 \ocx_tlx_flit_parser

42.26. Analyzing design hierarchy..
Top module:  \omi_host
Used module:     \ocx_dlx_top
Used module:         \ocx_dlx_xlx_if
Used module:         $paramod\ocx_dlx_txdf\GEMINI_NOT_APOLLO=0
Used module:             \ocx_dlx_tx_gbx
Used module:             \ocx_dlx_tx_que
Used module:             \ocx_dlx_tx_flt
Used module:                 \ocx_bram_infer
Used module:                 \ocx_dlx_crc16
Used module:                 \ocx_dlx_crc
Used module:             $paramod\ocx_dlx_tx_ctl\GEMINI_NOT_APOLLO=0
Used module:         $paramod\ocx_dlx_rxdf\GEMINI_NOT_APOLLO=0
Used module:             \ocx_dlx_rx_lane_66
Used module:             \ocx_dlx_rx_lane
Used module:             $paramod\ocx_dlx_rx_main\GEMINI_NOT_APOLLO=0
Used module:                 \ocx_dlx_rx_bs
Used module:     \ocx_tlx_top
Used module:         \ocx_tlx_framer
Used module:             \ocx_tlx_513x32_fifo
Used module:                 $paramod\ocx_tlx_fifo_cntlr\FIFO_ADDR_WIDTH=5
Used module:                 $paramod\ocx_leaf_inferd_regfile\REGFILE_DEPTH=32\REGFILE_WIDTH=513\ADDR_WIDTH=5
Used module:             \ocx_tlx_514x16_fifo
Used module:                 $paramod\ocx_tlx_fifo_cntlr\FIFO_ADDR_WIDTH=4
Used module:                 $paramod\ocx_leaf_inferd_regfile\REGFILE_DEPTH=16\REGFILE_WIDTH=514\ADDR_WIDTH=4
Used module:             \ocx_tlx_framer_cmd_fifo
Used module:             \ocx_tlx_framer_rsp_fifo
Used module:         \ocx_tlx_rcv_top
Used module:             \ocx_tlx_parser_err_mac
Used module:             \ocx_tlx_rcv_mac
Used module:                 $paramod\ocx_tlx_cfg_mac\addr_width=6
Used module:                     $paramod\dram_syn_test\ADDRESSWIDTH=6\BITWIDTH=32\DEPTH=64
Used module:                 $paramod\ocx_tlx_data_fifo_mac\cmd_addr_width=7\resp_addr_width=8
Used module:                     $paramod\ocx_tlx_bdi_mac\resp_addr_width=8\cmd_addr_width=7
Used module:                     $paramod\bram_syn_test\ADDRESSWIDTH=8\BITWIDTH=256\DEPTH=256
Used module:                     $paramod\ocx_tlx_dcp_fifo_ctl\addr_width=8
Used module:                     $paramod\dram_syn_test\ADDRESSWIDTH=7\BITWIDTH=256\DEPTH=128
Used module:                     $paramod\ocx_tlx_dcp_fifo_ctl\addr_width=7
Used module:                 $paramod\ocx_tlx_resp_fifo_mac\resp_addr_width=7
Used module:                     $paramod\bram_syn_test\ADDRESSWIDTH=7\BITWIDTH=56\DEPTH=128
Used module:                     $paramod\ocx_tlx_vc0_fifo_ctl\addr_width=7\DATA_WIDTH=56
Used module:                 $paramod\ocx_tlx_cmd_fifo_mac\cmd_addr_width=6
Used module:                     $paramod\dram_syn_test\ADDRESSWIDTH=6\BITWIDTH=168\DEPTH=64
Used module:                     $paramod\ocx_tlx_vc1_fifo_ctl\addr_width=6\DATA_WIDTH=168
Used module:             \ocx_tlx_parse_mac
Used module:                 \ocx_tlx_ctl_fsm
Used module:                 \ocx_tlx_data_arb
Used module:                 \ocx_tlx_flit_parser
Removing unused module `\ocx_dlx_txdf'.
Removing unused module `\ocx_dlx_tx_ctl'.
Removing unused module `\ocx_dlx_rxdf'.
Removing unused module `\ocx_dlx_rx_main'.
Removing unused module `\ocx_tlx_vc1_fifo_ctl'.
Removing unused module `\ocx_tlx_vc0_fifo_ctl'.
Removing unused module `\ocx_tlx_resp_fifo_mac'.
Removing unused module `\ocx_tlx_fifo_cntlr'.
Removing unused module `\ocx_tlx_dcp_fifo_ctl'.
Removing unused module `\ocx_tlx_data_fifo_mac'.
Removing unused module `\ocx_tlx_cmd_fifo_mac'.
Removing unused module `\ocx_tlx_cfg_mac'.
Removing unused module `\ocx_tlx_bdi_mac'.
Removing unused module `\ocx_leaf_inferd_regfile'.
Removing unused module `\dram_syn_test'.
Removing unused module `\bram_syn_test'.
Removed 16 unused modules.
Warning: Resizing cell port omi_host.dl.reg_04_val from 1 bits to 32 bits.
Warning: Resizing cell port omi_host.dl.dlx_l7_tx_seq from 2 bits to 6 bits.
Warning: Resizing cell port omi_host.dl.dlx_l6_tx_seq from 2 bits to 6 bits.
Warning: Resizing cell port omi_host.dl.dlx_l5_tx_seq from 2 bits to 6 bits.
Warning: Resizing cell port omi_host.dl.dlx_l4_tx_seq from 2 bits to 6 bits.
Warning: Resizing cell port omi_host.dl.dlx_l3_tx_seq from 2 bits to 6 bits.
Warning: Resizing cell port omi_host.dl.dlx_l2_tx_seq from 2 bits to 6 bits.
Warning: Resizing cell port omi_host.dl.dlx_l1_tx_seq from 2 bits to 6 bits.
Warning: Resizing cell port omi_host.dl.dlx_l0_tx_seq from 2 bits to 6 bits.

Warnings: 11 unique messages, 11 total
End of script. Logfile hash: bcac78a96f, CPU: user 2.81s system 0.04s, MEM: 187.32 MB peak
Yosys 0.9+3672 (git sha1 014c7e26, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os)
Time spent: 80% 44x read_verilog (2 sec), 19% 1x hierarchy (0 sec)
